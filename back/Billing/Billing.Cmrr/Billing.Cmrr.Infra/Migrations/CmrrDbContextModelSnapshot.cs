// <auto-generated />
using System;
using Billing.Cmrr.Infra.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Billing.Cmrr.Infra.Migrations
{
    [DbContext(typeof(CmrrDbContext))]
    partial class CmrrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("billing")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Billing.Cmrr.Domain.CmrrContract", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientId");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ClientName");

                    b.Property<byte>("CreationCause")
                        .HasColumnType("tinyint")
                        .HasColumnName("CreationCause");

                    b.Property<int>("DistributorId")
                        .HasColumnType("int")
                        .HasColumnName("DistributorId");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<int>("EndReason")
                        .HasColumnType("int")
                        .HasColumnName("EndReason");

                    b.Property<DateTime>("EnvironmentCreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("EnvironmentCreatedAt");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit")
                        .HasColumnName("IsArchived");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("DistributorId");

                    b.ToView("CmrrContracts");
                });

            modelBuilder.Entity("Billing.Cmrr.Domain.CmrrCount", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountingNumber")
                        .HasColumnType("int")
                        .HasColumnName("AccountingNumber");

                    b.Property<int>("BillingStrategy")
                        .HasColumnType("int")
                        .HasColumnName("BillingStrategy");

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("ContractId");

                    b.Property<DateTime>("CountPeriod")
                        .HasColumnType("datetime2")
                        .HasColumnName("CountPeriod");

                    b.Property<decimal>("EuroTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("EuroTotal");

                    b.HasKey("Id");

                    b.ToView("CmrrCounts");
                });

            modelBuilder.Entity("Distributors.Domain.Models.Distributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Code");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentId");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsAllowingCommercialCommunication")
                        .HasColumnType("bit")
                        .HasColumnName("IsAllowingCommercialCommunication");

                    b.Property<bool>("IsLucca")
                        .HasColumnType("bit")
                        .HasColumnName("IsLucca");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Distributors", "shared");
                });

            modelBuilder.Entity("Billing.Cmrr.Domain.CmrrContract", b =>
                {
                    b.HasOne("Distributors.Domain.Models.Distributor", "Distributor")
                        .WithMany()
                        .HasForeignKey("DistributorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distributor");
                });
#pragma warning restore 612, 618
        }
    }
}
