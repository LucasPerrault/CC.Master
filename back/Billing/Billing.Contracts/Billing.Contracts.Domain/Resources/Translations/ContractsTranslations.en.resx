<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="create_offer_exception_message" xml:space="preserve">
    <value>Cannot create offer: {0}</value>
  </data>
  <data name="create_price_list_exception_message" xml:space="preserve">
    <value>Cannot create price list for offer {0}: {1}</value>
  </data>
  <data name="delete_offer_exception_message" xml:space="preserve">
    <value>Cannot archive offer {0}: {1}</value>
  </data>
  <data name="delete_price_list_exception_message" xml:space="preserve">
    <value>Cannot delete price list {0} for offer {1}: {2}</value>
  </data>
  <data name="import_offer_missing_header" xml:space="preserve">
    <value>The following headers are missing : </value>
  </data>
  <data name="modify_offer_exception_message" xml:space="preserve">
    <value>Cannot modify offer {0}: {1}</value>
  </data>
  <data name="modify_price_list_exception_message" xml:space="preserve">
    <value>Cannot modify price list {0} for offer {1}: {2}</value>
  </data>
  <data name="offer_changed_despite_count" xml:space="preserve">
    <value>The properties of an offer cannot be modified if a related contract has a count</value>
  </data>
  <data name="oldest_price_list_start_date_changed" xml:space="preserve">
    <value>The start date of the oldest price list can never be changed</value>
  </data>
  <data name="price_list_changed" xml:space="preserve">
    <value>The properties of a price list or its rows cannot be modified via this query</value>
  </data>
  <data name="price_list_changed_despite_count" xml:space="preserve">
    <value>The properties of a price list or its rows cannot be modified if a related contract has a count (except for the addition on top of the highest bracket)</value>
  </data>
  <data name="price_list_detached" xml:space="preserve">
    <value>A price list attached to an offer cannot be detached from this offer</value>
  </data>
  <data name="price_list_has_negative_amounts" xml:space="preserve">
    <value>The list has at least one negative amount.</value>
  </data>
  <data name="price_list_should_have_rows" xml:space="preserve">
    <value>A price list must have rows</value>
  </data>
  <data name="price_list_start_defined_before_this_month" xml:space="preserve">
    <value>The start date of a price list cannot be created or updated before the current month</value>
  </data>
  <data name="price_list_starts_on_first_of_month" xml:space="preserve">
    <value>The start date of a price list must be the first of the month</value>
  </data>
  <data name="price_lists_starts_on_same_day" xml:space="preserve">
    <value>An offer cannot have two price lists on the same start date</value>
  </data>
  <data name="price_row_detached" xml:space="preserve">
    <value>A price row attached to a price list cannot change price list</value>
  </data>
  <data name="price_rows_not_ordered" xml:space="preserve">
    <value>The lines of the price list are not correctly ordered.</value>
  </data>
  <data name="started_price_list_deleted" xml:space="preserve">
    <value>A price list can no longer be deleted if its start date has passed</value>
  </data>
</root>